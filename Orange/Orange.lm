%option reentrant bison-bridge noyywrap
%option debug
%option verbose

%{
#include "y.tab.h"
#define YY_DECL int yylex( YYSTYPE * yylval_param, yyscan_t yyscanner, va_list argList)
%}

INTEGER		[[:digit:]]+
FLOAT		[[:digit:]]+.[[:digit:]]+
LETTER		[[:alnum:][:ALNUM:]]
%s IN_COMMENT
%s IN_STRING
%s IN_TRIGGER

%%


{FLOAT}		 		yylval->number = [ NSNumber numberWithDouble:atof( yytext ) ]; return FLOAT ;
{INTEGER}		 	yylval->integer = atoi( yytext ); return INTEGER ;

"%@"		 		yylval->object = va_arg( argList, id ); return OBJ ;
\.{LETTER}+	 		yylval->key = [ [ NSString stringWithUTF8String:yytext ] substringFromIndex:1 ] ; return KEY;
"self"				return SELF ;
"max"				return MAX ;
"min"				return MIN ;
"sum"				return SUM ;
"<="				return BIND ;
".."				return SEQ ;
"CGSize"			return SIZE ;
"CGRect"			return RECT ;
"UIEdgeInsets"		return INSETS ;
"CGPoint"			return POINT ;
[<>{}+\-*/:,;\[\]]	return yytext[0];
{LETTER}+			yylval->string = [ NSString stringWithUTF8String:yytext ]; return WORD;
<INITIAL>{
	"/*"			BEGIN(IN_COMMENT);
	"\""			BEGIN(IN_STRING);
}
<IN_COMMENT>{
	"*/"			BEGIN(INITIAL);
	[^*\n]+			// eat comment in chunks
	"*"				// eat the lone star
	\n				yylineno++;
}
<IN_STRING>{
	([^"]|"\\\"")*	yylval->string = [ NSString stringWithUTF8String:yytext ]; return STRING;
	"\""			BEGIN(INITIAL);
}
#.*$			// ignore line comment
[ \t\n]+

